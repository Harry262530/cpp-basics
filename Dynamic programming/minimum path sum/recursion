class Solution {
public:
    int helper(vector<vector<int>>& grid,int r,int c){
        if (r==0 && c==0){
            return grid[r][c];
        }
        int up=INT_MAX;
        int left=INT_MAX;
        if (r>0){
            up=grid[r][c]+helper(grid,r-1,c);
        }
        if (c>0){
            left=grid[r][c]+helper(grid,r,c-1);
        }
        return min(up,left);
    }
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        return helper(grid,n-1,m-1);
    }
};
