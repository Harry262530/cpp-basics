#include <bits/stdc++.h> 

void createadj(unordered_map<int,set<int>> &adj, vector<pair<int, int>> edges){
    int u,v;
    for (int i=0;i<edges.size();i++){
        u=edges[i].first;
        v=edges[i].second;
        
        adj[u].insert(v);
        adj[v].insert(u);
    }
}

void bfs(unordered_map<int,set<int>> &adj,vector<int> &ans,unordered_map<int,bool> &visited,int node){
    queue<int> q;
    q.push(node);
    visited[node]=1;
    while (!q.empty()){
        int x=q.front();
        q.pop();
        ans.push_back(x);
        for (auto y:adj[x]){
            if (!visited[y]){
                q.push(y);
                visited[y]=1;
            }
        }
    }
}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    unordered_map<int,set<int>> adj;
    vector<int> ans;
    unordered_map<int,bool> visited;
    
    createadj(adj,edges);
    for (int i=0;i<vertex;i++){
        if (!visited[i]){
            bfs(adj,ans,visited,i);
        }
    }
    return ans;
}
