Given a weighted, undirected and connected graph of V vertices and E edges. The task is to find the sum of weights of the edges of the Minimum Spanning Tree.

 

Example 1:

Input:
3 3
0 1 5
1 2 3
0 2 1

Output:
4
Explanation:

The Spanning Tree resulting in a weight
of 4 is shown above.
Example 2:

Input:
2 1
0 1 5

Output:
5
Explanation:
Only one Spanning Tree is possible
which has a weight of 5.


public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        vector<int> visited(V,0);
        pq.push({0,0});
        int sum=0;
        while (!pq.empty()){
            auto it=pq.top();
            pq.pop();
            int dis=it.first;
            int node=it.second;
            if (visited[node]==1)continue;
            visited[node]=1;
            sum+=dis;
            for (auto x:adj[node]){
                int adjnode=x[0];
                int adjwt=x[1];
                if (!visited[adjnode]){
                    pq.push({adjwt,adjnode});
                }
            }
        }
        return sum;
    }
